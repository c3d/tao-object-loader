// ****************************************************************************
//  object_loader.tbl                                              Tao project
// ****************************************************************************
//
//   File Description:
//
//     Definition of the interface between XLR and native code
//     for the "object loader" module.
//
//
//
//
//
//
//
// ****************************************************************************
// This software is property of Taodyne SAS - Confidential
// Ce logiciel est la propriété de Taodyne SAS - Confidentiel
//  (C) 1992-2010 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2010 Jérôme Forissier <jerome@taodyne.com>
//  (C) 2010 Catherine Burvelle <cathy@taodyne.com>
//  (C) 2010 Lionel Schaffhauser <lionel@taodyne.com>
//  (C) 2010 Taodyne SAS
// ****************************************************************************

#include "object_loader.h"

PREFIX(ObjectLoader_object_centered,  tree,  "object",
       PARM(x, real, )
       PARM(y, real, )
       PARM(z, real, )
       PARM(width, real, )
       PARM(height, real, )
       PARM(depth, real, )
       PARM(file, text, ),
       return object(self, x, y, z, width, height, depth, file, false),
       GROUP(module.ObjectLoader)
       SYNOPSIS("Loads, scales and translates a 3D object")
       DESCRIPTION("Loads, scales and translates a 3D object. "
                   "@a file is a relative or absolute path to the model file. "
                   "The object is shown centered at (@a x, @a y, @a z). "
                   "The size of the object is specified by "
                   "@a width, @a height and @a depth: the model is scaled "
                   "proportionally so that it fits in a box of the specified "
                   "size."))

PREFIX(ObjectLoader_colored_object,  tree,  "colored_object",
       PARM(x, real, )
       PARM(y, real, )
       PARM(z, real, )
       PARM(width, real, )
       PARM(height, real, )
       PARM(depth, real, )
       PARM(file, text, ),
       return object(self, x, y, z, width, height, depth, file, true), /* */)

PREFIX(ObjectLoader_colored_object_centered,  tree,  "colored_object",
       PARM(file, text, ),
       return object(self, file, true), /* */)

PREFIX(ObjectLoader_object,  tree,  "object",
       PARM(file, text, ),
       return object(self, file, false),
       GROUP(module.ObjectLoader)
       SYNOPSIS("Loads a 3D object from @a file")
       DESCRIPTION("Loads a 3D object from @a file. No scaling or translation "
                   "occurs. The model is drawn as defined in the file."))
