// ****************************************************************************
//  object_loader.tbl                                              Tao project
// ****************************************************************************
//
//   File Description:
//
//     Definition of the interface between XLR and native code
//     for the "object loader" module.
//
//
//
//
//
//
//
// ****************************************************************************
// This document is released under the GNU General Public License.
// See http://www.gnu.org/copyleft/gpl.html and Matthew 25:22 for details
//  (C) 1992-2010 Christophe de Dinechin <christophe@taodyne.com>
//  (C) 2010 Jérôme Forissier <jerome@taodyne.com>
//  (C) 2010 Catherine Burvelle <cathy@taodyne.com>
//  (C) 2010 Lionel Schaffhauser <lionel@taodyne.com>
//  (C) 2010 Taodyne SAS
// ****************************************************************************

#include "object_loader.h"

PREFIX(ObjectLoader_object_centered,  tree,  "object",
       PARM(x, real, "x-coordinate of object center")
       PARM(y, real, "y-coordinate of object center")
       PARM(z, real, "z-coordinate of object center")
       PARM(w, real, "object width. Set to 0 to use default object width")
       PARM(h, real, "object height. "
                     "If set to 0, use the default object height except "
                     "if w is non-zero, in which case object"
                     "is scaled proportionally to have requested width")
       PARM(d, real, "object depth. "
                     "If set to 0, use the default object height except "
                     "if w is non-zero, in which case object"
                     "is scaled proportionally to have requested width")
       PARM(f, text, "filename"),
       return object(self, x, y, z, w, h, d, f),
       GROUP(3D)
       SYNOPSIS("Load a 3D object from file")
       DESCRIPTION("Load a 3D object from file and display it centered at "
                   "(x, y, z). "
                   "Supported formats include "
                   "Collada V1.4, 3DXML ASCII V3 and V4, OBJ, 3DS, "
                   "STL (ASCII and binary), OFF and COFF."))

PREFIX(ObjectLoader_object,  tree,  "object",
       PARM(f, text, "filename"),
       return object(self, f),
       GROUP(3D)
       SYNOPSIS("Load a 3D object from file")
       DESCRIPTION("Load a 3D object from file. "
                   "Supported formats include "
                   "Collada V1.4, 3DXML ASCII V3 and V4, OBJ, 3DS, "
                   "STL (ASCII and binary), OFF and COFF."))
